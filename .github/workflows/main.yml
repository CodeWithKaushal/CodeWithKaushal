# GitHub Action for generating a contribution graph with a snake eating your contributions.
name: Generate Snake

# Controls when the action will run.
on:
  schedule:
    # Run every 12 hours
    - cron: "0 */12 * * *"

  # Allows us to run the Action manually from the Actions tab.
  workflow_dispatch:
  
  # Also run on every push to the main branch
  push:
    branches:
      - main

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Clone repo
        uses: actions/checkout@v3
    
      # Generate the snake files in the './dist/' directory
      - name: Generate the snake files in './dist/'
        uses: Platane/snk@v3
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}  # Uses the repository owner dynamically
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
            dist/github-contribution-grid-snake.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
           GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use the personal access token secret

      # Show build status for troubleshooting
      - name: Show build status
        run: git status

      # Commit and push the new snake files to the output branch
      - name: Commit and push new files to the output branch
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add dist/
          git commit -m "Update snake animations"
          git push origin output
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use the personal access token secret
